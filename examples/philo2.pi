def TicketGenerator(gen) =
  new (ticket1).
  new (ticket2).
  gen!ticket1.gen!ticker2.0

def Philo(gen, control, left, right) =
  gen?(ticket).(
    left?(x).right?(x).control!ticket.tau.PhiloBis[gen, control, left, right]
  + right?(x).left?(x).control!ticket.tau.PhiloBis[gen, control, left, right]
  )

def PhiloBis(gen, control, left, right) =
  control?(x).(
    left!x.right!x.Philo[gen, control, left, right]
  + right!x.left!x.Philo[gen, control, left, right]
  )

def Fork(fork) =
  fork!x.fork?(x).Fork[fork]

def Controller(control) =
  control?(ticket).control!ticker.Controller[control]

local (gen).
local (fork1).
local (fork2).
(((((( Fork[fork1]
| Fork[fork2])
| Philo[gen, control, fork1, fork2])
| Philo[gen, control, fork2, fork1])
| TicketGenerator[gen])
| Controller[control])
| Controller[control])

